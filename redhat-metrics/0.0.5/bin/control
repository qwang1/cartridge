#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH

export PHPRC="${OPENSHIFT_METRICS_DIR}conf/php.ini"

CART_CONFD_DIR=${OPENSHIFT_METRICS_DIR}conf.d
HTTPD_CFG_FILE=${OPENSHIFT_METRICS_DIR}conf/httpd_nolog.conf
HTTPD_PID_FILE=${OPENSHIFT_METRICS_DIR}run/httpd.pid

cartridge_type="metrics"

function start() {
    echo "Starting $cartridge_type cartridge"
    ensure_valid_httpd_process "$HTTPD_PID_FILE" "$HTTPD_CFG_FILE"
    update_httpd_passenv $HTTPD_CFG_FILE
    /usr/sbin/httpd -C "Include ${CART_CONFD_DIR}/*.conf" -f $HTTPD_CFG_FILE -k start
    [ "$?" == "0" ] && wait_for_pid_file $HTTPD_PID_FILE
}

function stop() {
    echo "Stopping $cartridge_type cartridge"
    # Don't exit on errors on stop.
    set +e
    httpd_pid=`cat "$HTTPD_PID_FILE" 2> /dev/null`
    ensure_valid_httpd_process "$HTTPD_PID_FILE" "$HTTPD_CFG_FILE"
    /usr/sbin/httpd -C "Include ${CART_CONFD_DIR}/*.conf" -f $HTTPD_CFG_FILE -k stop
    wait_for_stop $httpd_pid
}

function restart() {
    echo "Restarting $cartridge_type cartridge"
    ensure_valid_httpd_process "$HTTPD_PID_FILE" "$HTTPD_CFG_FILE"
    update_httpd_passenv $HTTPD_CFG_FILE
    /usr/sbin/httpd -C "Include ${CART_CONFD_DIR}/*.conf" -f $HTTPD_CFG_FILE -k restart
}

function status() {
  if ps --no-headers --pid $(< $HTTPD_PID_FILE) > /dev/null
  then
    client_result 'Metrics is running'
  else
    client_result 'Metrics is either stopped or inaccessible'
  fi
}

function reload() {
    echo "Reloading $cartridge_type cartridge"
    restart
}

# Clean up any log files
function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_METRICS_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_METRICS_LOG_DIR/*
}

case "$1" in
  start)      start ;;
  stop)       stop ;;
  restart)    restart ;;
  status)     status ;;
  reload)     reload ;;
  tidy)       tidy ;;
  *)          exit 0
esac

