#!/bin/bash -e
source $OPENSHIFT_CARTRIDGE_SDK_BASH

HTTPD_CFG_FILE=${OPENSHIFT_ROCKMONGO_DIR}etc/conf/httpd_nolog.conf
HTTPD_PID_FILE=${OPENSHIFT_ROCKMONGO_DIR}run/httpd.pid

function start() {
  echo "Starting RockMongo cartridge"
  update_httpd_passenv $HTTPD_CFG_FILE
  /usr/sbin/httpd -C "Include ${OPENSHIFT_ROCKMONGO_DIR}etc/conf.d/*.conf" -f $HTTPD_CFG_FILE -k start
  [ "$?" == "0" ] && wait_for_pid_file $HTTPD_PID_FILE
}

function stop() {
  echo "Stopping RockMongo cartridge"
  if [ -f "$HTTPD_PID_FILE" ]; then
      httpd_pid=`cat "$HTTPD_PID_FILE" 2> /dev/null`
  fi
  ensure_valid_httpd_process "$HTTPD_PID_FILE" "$HTTPD_CFG_FILE"
  /usr/sbin/httpd -C "Include ${OPENSHIFT_ROCKMONGO_DIR}etc/conf.d/*.conf" -f $HTTPD_CFG_FILE -k stop
  wait_for_stop $httpd_pid
}

function restart() {
  echo "Restarting RockMongo cartridge"
  update_httpd_passenv $HTTPD_CFG_FILE
  /usr/sbin/httpd -C "Include ${OPENSHIFT_ROCKMONGO_DIR}etc/conf.d/*.conf" -f $HTTPD_CFG_FILE -k restart
}

# Is the packaged software really running?
function status() {
  if [ -f $HTTPD_PID_FILE ]
  then
    if ps --no-headers --pid $(< $HTTPD_PID_FILE) > /dev/null
    then
      client_result 'Rockmongo is running'
      exit 0
    fi
  fi
  client_result 'Rockmongo is either stopped or inaccessible'
}

# Clean up any log files
function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_ROCKMONGO_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_ROCKMONGO_LOG_DIR/*
}

case "$1" in
  start)            start ;;
  stop)             stop ;;
  restart|reload)   restart ;;
  status)           status ;;
  tidy)             tidy ;;
  *)                exit 0
esac
